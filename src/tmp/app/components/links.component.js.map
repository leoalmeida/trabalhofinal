{"version":3,"sources":["app/components/links.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,qBAAwB,eAAe,CAAC,CAAA;AACxC,uBAA0D,iBAAiB,CAAC,CAAA;AAC5E,6BAA0B,0BAA0B,CAAC,CAAA;AAcrD;IAKI,wBACY,OAAoB,EACpB,MAAc;QADd,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE/B,mCAAU,GAAV,UAAW,IAAoB,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAExE,yCAAgB,GAAhB,UAAiB,IAAkB,EAAE,IAAkB,EAAE,QAAmB;QACxE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxD,oEAAoE;IACxE,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAoB;QACzB,gBAAgB;QAChB,uDAAuD;QAEvD,gBAAgB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAK,IAAI,CAAC,EAAE,CAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAlCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,yPAQX;SACF,CAAC;;sBAAA;IAyBF,qBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,sBAAc,iBAwB1B,CAAA","file":"app/components/links.component.js","sourcesContent":["/**\n * Created by LeonardoAlmeida on 03/05/16.\n */\nimport {Component} from '@angular/core';\nimport {OnActivate, Router, RouteSegment, RouteTree} from \"@angular/router\";\nimport {MenuService} from \"../services/menu.service\";\nimport {ItemDefinition} from \"../models/item.model\";\n\n@Component({\n    template: `\n    <ul class=\"items\">\n      <li *ngFor=\"let crisis of crises\"\n        [class.selected]=\"isSelected(crisis)\"\n        (click)=\"onSelect(link)\">\n        <span class=\"badge\">{{link.id}}</span> {{link.name}}\n      </li>\n    </ul>\n  `,\n})\nexport class LinksComponent implements OnActivate {\n    itemList: ItemDefinition[];\n    private currSegment: RouteSegment;\n    private selectedId: number;\n\n    constructor(\n        private service: MenuService,\n        private router: Router) { }\n\n    isSelected(item: ItemDefinition) { return item.id === this.selectedId; }\n\n    routerOnActivate(curr: RouteSegment, prev: RouteSegment, currTree: RouteTree) {\n        this.currSegment = curr;\n        this.selectedId = +currTree.parent(curr).getParam('id');\n        //this.service.getAllMenuItems().then(list => this.itemList = list);\n    }\n\n    onSelect(item: ItemDefinition) {\n        // Absolute link\n        // this.router.navigate([`/crisis-center`, crisis.id]);\n\n        // Relative link\n        this.router.navigate([`./${item.id}`], this.currSegment);\n    }\n}\n"],"sourceRoot":"/source/"}